create table "public"."employees" (
                                      "id" bigint generated always as identity not null,
                                      "name" text,
                                      "email" text,
                                      "created_at" timestamp with time zone default now()
);


create table "public"."users" (
                                  "id" bigint generated by default as identity not null,
                                  "created_at" timestamp with time zone not null default now()
);


alter table "public"."users" enable row level security;

CREATE UNIQUE INDEX employees_pkey ON public.employees USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."employees" add constraint "employees_pkey" PRIMARY KEY using index "employees_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";


alter table "public"."employees" drop constraint "employees_pkey";

alter table "public"."users" drop constraint "users_pkey";

drop index if exists "public"."users_pkey";

drop index if exists "public"."employees_pkey";

drop table "public"."employees";

alter table "public"."users" add column "email" text;

alter table "public"."users" add column "name" text;

alter table "public"."users" alter column "created_at" drop not null;

alter table "public"."users" alter column "id" set generated always;

alter table "public"."users" disable row level security;

CREATE UNIQUE INDEX employees_pkey ON public.users USING btree (id);

alter table "public"."users" add constraint "employees_pkey" PRIMARY KEY using index "employees_pkey";


create sequence "public"."songs_id_seq";

create table "public"."songs" (
                                  "id" integer not null default nextval('songs_id_seq'::regclass),
                                  "name" character varying(100),
                                  "author" character varying(100),
                                  "createdat" timestamp without time zone,
                                  "lastmodifiedat" timestamp without time zone
);


alter sequence "public"."songs_id_seq" owned by "public"."songs"."id";

CREATE UNIQUE INDEX users_email_key ON public.users USING btree (email);

alter table "public"."users" add constraint "users_email_key" UNIQUE using index "users_email_key";


alter table "public"."songs" drop column "createdat";

alter table "public"."songs" drop column "lastmodifiedat";

alter table "public"."songs" add column "created" timestamp without time zone;

alter table "public"."songs" add column "lastmodified" timestamp without time zone;


alter table "public"."users" add column "auth_id" uuid;

alter table "public"."users" add column "image" text;

CREATE UNIQUE INDEX users_auth_id_key ON public.users USING btree (auth_id);

alter table "public"."users" add constraint "users_auth_id_key" UNIQUE using index "users_auth_id_key";


create table "public"."members" (
                                    "user" bigint not null,
                                    "org" bigint not null
);


alter table "public"."members" enable row level security;

create table "public"."organizations" (
                                          "id" bigint generated by default as identity not null,
                                          "name" character varying not null default ''::character varying,
                                          "image" character varying
);


alter table "public"."organizations" enable row level security;

alter table "public"."songs" drop column "author";

alter table "public"."songs" add column "org" bigint not null;

alter table "public"."songs" alter column "id" drop default;

alter table "public"."songs" alter column "id" add generated by default as identity;

CREATE UNIQUE INDEX members_pkey ON public.members USING btree ("user", org);

CREATE UNIQUE INDEX organizations_id_key ON public.organizations USING btree (id);

CREATE UNIQUE INDEX organizations_pkey ON public.organizations USING btree (id);

CREATE UNIQUE INDEX songs_id_key ON public.songs USING btree (id);

CREATE UNIQUE INDEX songs_pkey ON public.songs USING btree (id);

alter table "public"."members" add constraint "members_pkey" PRIMARY KEY using index "members_pkey";

alter table "public"."organizations" add constraint "organizations_pkey" PRIMARY KEY using index "organizations_pkey";

alter table "public"."songs" add constraint "songs_pkey" PRIMARY KEY using index "songs_pkey";

alter table "public"."members" add constraint "members_org_fkey" FOREIGN KEY (org) REFERENCES organizations(id) ON DELETE CASCADE not valid;

alter table "public"."members" validate constraint "members_org_fkey";

alter table "public"."members" add constraint "members_user_fkey" FOREIGN KEY ("user") REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."members" validate constraint "members_user_fkey";

alter table "public"."organizations" add constraint "organizations_id_key" UNIQUE using index "organizations_id_key";

alter table "public"."songs" add constraint "songs_id_key" UNIQUE using index "songs_id_key";

alter table "public"."songs" add constraint "songs_org_fkey" FOREIGN KEY (org) REFERENCES organizations(id) ON DELETE CASCADE not valid;

alter table "public"."songs" validate constraint "songs_org_fkey";


alter table "public"."members" drop constraint "members_org_fkey";

alter table "public"."members" drop constraint "members_user_fkey";

alter table "public"."members" drop constraint "members_pkey";

drop index if exists "public"."members_pkey";

alter table "public"."members" drop column "org";

alter table "public"."members" drop column "user";

alter table "public"."members" add column "org_id" bigint not null;

alter table "public"."members" add column "user_id" bigint not null;

CREATE UNIQUE INDEX members_pkey ON public.members USING btree (user_id, org_id);

alter table "public"."members" add constraint "members_pkey" PRIMARY KEY using index "members_pkey";

alter table "public"."members" add constraint "members_org_id_fkey" FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE not valid;

alter table "public"."members" validate constraint "members_org_id_fkey";

alter table "public"."members" add constraint "members_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."members" validate constraint "members_user_id_fkey";


alter table "public"."members" drop constraint "members_org_id_fkey";

alter table "public"."members" drop constraint "members_user_id_fkey";

alter table "public"."members" drop constraint "members_pkey";

drop index if exists "public"."members_pkey";

alter table "public"."members" drop column "org_id";

alter table "public"."songs" alter column "org" drop not null;

alter table "public"."users" add column "password" character varying(80);

alter table "public"."members" add constraint "members_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE NOT VALID not valid;

alter table "public"."members" validate constraint "members_user_id_fkey";


alter table "public"."members" add column "org_id" bigint not null;

CREATE UNIQUE INDEX members_pkey ON public.members USING btree (org_id, user_id);

alter table "public"."members" add constraint "members_pkey" PRIMARY KEY using index "members_pkey";

alter table "public"."members" add constraint "members_org_id_fkey" FOREIGN KEY (org_id) REFERENCES organizations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."members" validate constraint "members_org_id_fkey";


alter table "public"."organizations" drop column "image";



alter table "public"."songs" add column "composeid" character varying(50);


create table "public"."album" (
                                  "id" bigint generated by default as identity not null,
                                  "created_at" timestamp with time zone not null default now(),
                                  "name" text default ''::text,
                                  "org_id" bigint not null
);


alter table "public"."album" enable row level security;

alter table "public"."songs" add column "album_id" bigint;

CREATE UNIQUE INDEX album_id_key ON public.album USING btree (id);

CREATE UNIQUE INDEX album_pkey ON public.album USING btree (id);

alter table "public"."album" add constraint "album_pkey" PRIMARY KEY using index "album_pkey";

alter table "public"."album" add constraint "album_org_id_fkey" FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE not valid;

alter table "public"."album" validate constraint "album_org_id_fkey";

alter table "public"."songs" add constraint "songs_album_id_fkey" FOREIGN KEY (album_id) REFERENCES album(id) ON DELETE CASCADE not valid;

alter table "public"."songs" validate constraint "songs_album_id_fkey";


alter table "public"."album" drop constraint "album_org_id_fkey";

alter table "public"."songs" drop constraint "songs_album_id_fkey";

alter table "public"."album" drop constraint "album_pkey";

drop index if exists "public"."album_id_key";

drop index if exists "public"."album_pkey";

drop table "public"."album";

create table "public"."albums" (
                                   "id" bigint generated by default as identity not null,
                                   "created_at" timestamp with time zone not null default now(),
                                   "name" text default ''::text,
                                   "org" bigint not null
);


alter table "public"."albums" enable row level security;

alter table "public"."songs" drop column "album_id";

alter table "public"."songs" add column "album" bigint;

CREATE UNIQUE INDEX album_id_key ON public.albums USING btree (id);

CREATE UNIQUE INDEX album_pkey ON public.albums USING btree (id);

alter table "public"."albums" add constraint "album_pkey" PRIMARY KEY using index "album_pkey";

alter table "public"."albums" add constraint "album_id_key" UNIQUE using index "album_id_key";

alter table "public"."albums" add constraint "albums_org_fkey" FOREIGN KEY (org) REFERENCES organizations(id) ON DELETE CASCADE not valid;

alter table "public"."albums" validate constraint "albums_org_fkey";

alter table "public"."songs" add constraint "songs_album_fkey" FOREIGN KEY (album) REFERENCES albums(id) ON DELETE CASCADE not valid;

alter table "public"."songs" validate constraint "songs_album_fkey";


alter table "public"."songs" drop constraint "songs_album_fkey";

alter table "public"."songs" add constraint "songs_album_fkey" FOREIGN KEY (album) REFERENCES albums(id) ON DELETE SET NULL not valid;

alter table "public"."songs" validate constraint "songs_album_fkey";


alter table "public"."albums" add column "last_modified" timestamp with time zone default now();


